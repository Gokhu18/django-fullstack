{"name":"django fullstack","tagline":"Full stack django example project build on multiple docker containers ready for development and production.","body":"# django-fullstack\r\n\r\n[![Docker Repository on Quay.io](https://quay.io/repository/sspross/django-fullstack/status \"Docker Repository on Quay.io\")](https://quay.io/repository/sspross/django-fullstack)\r\n\r\nFull stack django example project build on multiple docker containers ready for `development` and `production`.\r\n\r\n**Batteries**\r\n\r\n- `postgres` (with `postgis` and `hstore` extensions)\r\n- `nginx` \r\n- `gunicorn` \r\n- `redis` \r\n- `celery`\r\n- `rabbitmq`\r\n\r\n**Create your own**\r\n\r\nThis repository is an instance of [cookiecutter-django-fullstack](https://github.com/sspross/cookiecutter-django-fullstack). Check it out to create your own django fullstack project.\r\n\r\n## Development\r\n\r\n### MacOS X\r\n\r\n**Setup**\r\n\r\n- `brew`\r\n- `pip`\r\n\r\n```\r\nbrew install docker boot2docker\r\nsudo pip install docker-compose\r\nboot2docker upgrade\r\nboot2docker init\r\n```\r\n\r\nIn case of errors, try `boot2docker delete && boot2docker init` again.\r\nFor more details, read [documentation](https://docs.docker.com/installation/mac/).\r\n\r\nCreate host alias for current docker host IP with `echo $(boot2docker ip) dockerhost | sudo tee -a /etc/hosts`.\r\nIP can change in future, update it in `/etc/hosts` if necessary.\r\n\r\n**Running**\r\n\r\n```\r\nboot2docker start\r\n$(boot2docker shellinit)\r\ndocker-compose up\r\n```\r\n\r\n- Browse to [http://dockerhost/](http://dockerhost/)\r\n- Or so something like `docker-compose run django python manage.py shell|migrate|collectstatic`\r\n\r\n## Deployment\r\n\r\n### Docker Registry\r\n\r\nRegister your django app image (e.g. this repo) to a docker registry. E.g. [quay.io](https://quay.io/), which builds your container images on git push.\r\n\r\n0. Push your repository to GitHub\r\n0. Create an account on [quay.io](https://quay.io/)\r\n0. Add a repository and link it to your GitHub repository\r\n0. Update `image`s of `django` and `worker` in `tutum.yml` to `quay.io/YOURUSER/YOURDJANGOPROJECT`  \r\n\r\n### Managed Cloud Deployment\r\n\r\nYou can deploy this app in many different ways of course. E.g. just checking it out on a server and running it with `docker-compose` (not recommended for production use and that's so 2014). So we use [tutum.co](https://www.tutum.co/) to manage our cloud (nodes on e.g. DigitalOcean or Amazon) and deployment of our docker images. \r\n\r\n0. Create an account on [tutum.co](https://www.tutum.co/)\r\n0. Create at least 1 node (e.g. on DigitalOcean). How many nodes you need and which containers are best on which nodes depends heavy on your kind of application. But you can change this later very easy thanks to tutum.co\r\n0. Update `VIRTUAL_HOST` of `django` in `tutum.yml`to `nginx.YOURDJANGOPROJECT.YOURUSER.svc.tutum.io` and use it to create a new stack on tutum.co\r\n0. Start it and browse to [http://nginx.YOURDJANGOPROJECT.YOURUSER.svc.tutum.io/](http://nginx.YOURDJANGOPROJECT.YOURUSER.svc.tutum.io/)\r\n\r\n## Todos:\r\n\r\n- [ ] Fix code live editing in development\r\n- [ ] how to deploy code updates right....\r\n- [ ] `docker-compose.yml` and `tutum.yml` are very similar....\r\n- [ ] How to use a domain... and is this `vhost.d` the best way?\r\n- [ ] Add Celery test\r\n- [ ] Add Postgis\r\n- [ ] Try Kubernetes (with GCE)\r\n\r\n## Tipps & Tricks\r\n\r\n- Delete all docker containers `docker rm -f $(docker ps -a -q)`\r\n- Delete all docker images `docker rmi -f $(docker images -q)`\r\n\r\n","google":"UA-61577124-1","note":"Don't delete this file! It's used internally to help with page regeneration."}